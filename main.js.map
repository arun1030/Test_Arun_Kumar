{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/products/product-list/product-list.component.css","webpack:///./src/app/components/products/product-list/product-list.component.html","webpack:///./src/app/components/products/product-list/product-list.component.ts","webpack:///./src/app/components/products/product/product.component.css","webpack:///./src/app/components/products/product/product.component.html","webpack:///./src/app/components/products/product/product.component.ts","webpack:///./src/app/components/products/products.component.css","webpack:///./src/app/components/products/products.component.html","webpack:///./src/app/components/products/products.component.ts","webpack:///./src/app/models/product.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a href=\\\"/\\\" class=\\\"navbar-brand\\\">\\n     NGProducts\\n  </a>\\n</nav>\\n<app-products></app-products>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularfire';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n//firebase\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\n//component\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\nimport { ProductComponent } from './components/products/product/product.component'\n//service\nimport { ProductService } from './services/product.service';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductListComponent,\n    ProductComponent,\n   \n    \n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    \n\n  ],\n  providers: [\n    ProductService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"text-center\\\">List of Product</h6>\\n    <table class=\\\"table table-sm table-hover\\\">\\n      <tbody>\\n        <tr *ngFor=\\\"let product of productList\\\">\\n         <td>{{product.name}}</td>\\n         <td>{{product.category}}</td>\\n         <td>{{product.location}}</td>\\n         <td>{{product.price}}</td>\\n         <td>{{product.date}}</td>\\n         <td>\\n           <a class=\\\"btn btn-danger text-white\\\" (click)=\\\"onEdit(product)\\\">\\n             <i class=\\\"fas fa-edit\\\"></i>\\n           </a>\\n           <a class=\\\"btn btn-danger text-white\\\" (click)=\\\"onDelete(product.$key)\\\">\\n             <i class=\\\"fas fa-trash-alt\\\"></i>\\n           </a>\\n         </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../../services/product.service';\nimport { Product } from '../../../models/product';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  productList: Product[];\n\n  constructor( private productService: ProductService) { }\n\n  ngOnInit() {\n  this.productService.getProduct()\n   .snapshotChanges()\n    .subscribe(item =>{\n      this.productList= [];\n      item.forEach(element => {\n        let x = element.payload.toJSON();\n        x[\"$key\"]=element.key;\n        this.productList.push(x as Product);\n        \n      });\n    });\n\n  }\n  onEdit(product: Product){\n    this.productService.selectedProduct= Object.assign({},product);\n\n  }\n\n  onDelete($key : string){\n    this.productService.deleteProduct($key);\n    \n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n    Add and Edit Product\\n    </button>\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Product</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" type=\\\"reset\\\" (click)=\\\"resetForm(productFormm)\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <div class=\\\"card mt-5\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <form #productForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(productForm)\\\">\\n                      <input type=\\\"hidden\\\" name=\\\"$key\\\" #$key=\\\"ngModel\\\" [(ngModel)]=\\\"productService.selectedProduct.$key\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"productService.selectedProduct.name\\\" placeholder=\\\"Add product Name\\\">\\n                      </div>\\n                     \\n                      <div class=\\\"form-group\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"category\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"productService.selectedProduct.category\\\" placeholder=\\\"Add product category\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" #location=\\\"ngModel\\\" [(ngModel)]=\\\"productService.selectedProduct.location\\\" placeholder=\\\"Add product location\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"price\\\" #price=\\\"ngModel\\\" [(ngModel)]=\\\"productService.selectedProduct.price\\\" placeholder=\\\"Add product price\\\">\\n                      </div>\\n                      \\n                \\n                      <div class=\\\"form-group\\\">\\n                        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >\\n                          <i class=\\\"fas fa-plus-circle\\\"></i> Save Product\\n                        </button>\\n                      </div>\\n                    </form> \\n                  </div>\\n                </div>\\n          </div>    \\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"resetForm(productFormm)\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          </div>\\n          \\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService} from '../../../services/product.service';\n\nimport { NgForm} from '@angular/forms';\nimport { Product } from '../../../models/product';\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor( private productService: ProductService) { }\n\n  ngOnInit() {\n    this.productService.getProduct();\n    this.resetForm()\n  }\n   onSubmit(productForm: NgForm){\n     if (productForm.value.$key ==null)\n     this.productService.insertProduct(productForm.value)\n     else\n     this.productService.updateProduct(productForm.value)\n     this.resetForm(productForm);\n   }\n\n  resetForm(productForm?: NgForm){\n    if(productForm != null)\n    productForm.reset();\n    this.productService.selectedProduct = new Product();\n  }\n \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-product></app-product>\\n    </div>\\n    <div class=\\\"col-md-5 text-center\\\">\\n      <app-product-list></app-product-list>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Product {\n    $key: string;\n    name: string;\n    category: string;\n    location: string;\n    price: number;\n    \n}\n","import { Injectable } from '@angular/core';\n\nimport{ AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Product} from '../models/product'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  productlist: AngularFireList<any>;\n\n  selectedProduct: Product = new Product();\n\n  constructor( private firebase: AngularFireDatabase) { }\n\n  getProduct(){\n    return  this.productlist=this.firebase.list('products');\n    \n  }\n\n  insertProduct(product: Product){\n    this.productlist.push({\n      name: product.name,\n      category: product.category,\n      location: product.location,\n      price: product.price,\n      \n    });\n  }\n  updateProduct(product: Product){\n    this.productlist.update(product.$key,{\n      name: product.name,\n      category: product.category,\n      location: product.location,\n      price: product.price,\n      \n    });\n  }\n  deleteProduct($key: string){\n    this.productlist.remove($key);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n  \n      apiKey: \"AIzaSyDC2vg17vYBneTQvtL8URZ-vJ9NN1Q-zIE\",\n      authDomain: \"curdapp-78653.firebaseapp.com\",\n      databaseURL: \"https://curdapp-78653.firebaseio.com\",\n      projectId: \"curdapp-78653\",\n      storageBucket: \"curdapp-78653.appspot.com\",\n      messagingSenderId: \"698959409209\"\n    \n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}